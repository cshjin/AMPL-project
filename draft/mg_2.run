#----------------------------------------
# FARMAR RUN COMMEND
#----------------------------------------


reset;
option solver CPLEX;
option presolve 1;
option cplex_options 'sensitivity';
option precision 4;
option show_stats 1;
include mg_2.mod;
option show_stats 1;
for { t in 1.. 1} {
	display t > mg_2.out;
	solve;
	
	display _objname, _obj > mg_2.out;
	 # Print out the value of the objective function 
	display _varname, _var, _var.lb,_var.ub, _var.rc > mg_2.out;
	 # Print out names, values and reduced costs 
#	display _varname, _var.down, _var.current, _var.up > mg_2.out;
	 # Print out names, objective function coefficients 
	 # together with what can be changed without causing 
	 # a base change 
	 # down = lower limit, up = upper limit 
	display _conname, _con.slack, _con.dual > mg_2.out;
	 # Print out constraint name, slack and shadow price 
#	display _conname,_con.down,_con.current,_con.up > mg_2.out;
	 # Print out constraint name, right-hand side coefficient 
	 # together with what can be changed without causing 
	 # a base change 
	 
#	reset some parameters to solve it repeately
	let InitBattery := InitBattery 
						+ amount['GB'] + amount['RB'] 
						- amount['BG'] - amount['BC'];

}
	# read {t in Time} WindSpeed[t] < WindSpeed.txt;
	read WindSpeed < WindSpeed.txt;

